## Autogenerated by Scribe. DO NOT MODIFY.

name: Citas
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: 'api/doctores/{doctorId}/slots'
    metadata:
      groupName: Citas
      groupDescription: ''
      subgroup: |-
        General

        Get available slots for a doctor in a date range

        Returns the available time slots for scheduling appointments for a specific doctor within a given date range.
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      doctorId:
        name: doctorId
        description: 'The ID of the doctor.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      doctorId: 1
    queryParameters:
      startDate:
        name: startDate
        description: 'date The start date (YYYY-MM-DD).'
        required: true
        example: '2025-10-10'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      endDate:
        name: endDate
        description: 'date The end date (YYYY-MM-DD).'
        required: true
        example: '2025-10-10'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanQueryParameters:
      startDate: '2025-10-10'
      endDate: '2025-10-10'
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          [
            {
              "id": 1,
              "fecha": "2025-10-10",
              "hora_inicio": "09:00",
              "hora_fin": "10:00",
              "disponible": true
            }
          ]
        headers: []
        description: ''
        custom: []
      -
        status: 400
        content: '{"message": "Fechas requeridas"}'
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: '{"message": "Doctor no encontrado"}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/doctores/{doctorId}/validate-slot'
    metadata:
      groupName: Citas
      groupDescription: ''
      subgroup: |-
        General

        Validate if a slot is available

        Checks in real-time if a specific time slot is available for a doctor on a given date and time.
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      doctorId:
        name: doctorId
        description: 'The ID of the doctor.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      doctorId: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      fecha:
        name: fecha
        description: 'The date (YYYY-MM-DD).'
        required: true
        example: '2025-10-10'
        type: date
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      hora:
        name: hora
        description: 'The time (HH:MM).'
        required: true
        example: '09:00'
        type: time
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      fecha: '2025-10-10'
      hora: '09:00'
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"available": true}'
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: '{"message": "Doctor no encontrado"}'
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: '{"errors": {"fecha": ["The fecha field is required."]}}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/citas
    metadata:
      groupName: Citas
      groupDescription: ''
      subgroup: |-
        Patient

        Create appointment

        Creates a new appointment for the authenticated patient in an available time slot for the selected doctor. Automatically reserves the slot.
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      id_paciente:
        name: id_paciente
        description: 'The ID of the patient.'
        required: true
        example: 3
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      id_doctor:
        name: id_doctor
        description: 'The ID of the doctor.'
        required: true
        example: 2
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      fecha_cita:
        name: fecha_cita
        description: 'The appointment date (YYYY-MM-DD).'
        required: true
        example: '2025-10-01'
        type: date
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      hora_cita:
        name: hora_cita
        description: 'The appointment time (HH:MM).'
        required: true
        example: '14:30'
        type: time
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      lugar:
        name: lugar
        description: 'The appointment location.'
        required: true
        example: 'Consultorio 101'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      motivo:
        name: motivo
        description: 'The reason for the appointment.'
        required: true
        example: 'Dolor de cabeza'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      id_paciente: 3
      id_doctor: 2
      fecha_cita: '2025-10-01'
      hora_cita: '14:30'
      lugar: 'Consultorio 101'
      motivo: 'Dolor de cabeza'
    fileParameters: []
    responses:
      -
        status: 201
        content: '{"message": "Cita creada con Ã©xito"}'
        headers: []
        description: ''
        custom: []
      -
        status: 401
        content: '{"message": "Unauthenticated."}'
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: '{"errors": {"fecha_cita": ["The fecha cita field is required."]}}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/citas/{id}'
    metadata:
      groupName: Citas
      groupDescription: ''
      subgroup: |-
        Admin

        Update any appointment

        Allows the administrator to modify any appointment, automatically handling slot release and reservation.
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the appointment.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      id_paciente:
        name: id_paciente
        description: 'The ID of the patient.'
        required: true
        example: 3
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      id_doctor:
        name: id_doctor
        description: 'The ID of the doctor.'
        required: true
        example: 2
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      fecha_cita:
        name: fecha_cita
        description: 'The appointment date (YYYY-MM-DD).'
        required: true
        example: '2025-10-01'
        type: date
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      hora_cita:
        name: hora_cita
        description: 'The appointment time (HH:MM).'
        required: true
        example: '14:30'
        type: time
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      lugar:
        name: lugar
        description: 'The appointment location.'
        required: true
        example: 'Consultorio 101'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      id_paciente: 3
      id_doctor: 2
      fecha_cita: '2025-10-01'
      hora_cita: '14:30'
      lugar: 'Consultorio 101'
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "id": 1,
            "id_paciente": 3,
            "id_doctor": 2,
            "fecha_cita": "2025-10-01",
            "hora_cita": "14:30:00",
            "lugar": "Consultorio 101",
            "motivo": "Consulta general",
            "created_at": "2025-09-01T10:00:00.000000Z",
            "updated_at": "2025-09-01T10:00:00.000000Z"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 401
        content: '{"message": "Unauthenticated."}'
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: '{"message": "Cita no encontrada"}'
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: '{"errors": {"id_paciente": ["The id paciente field is required."]}}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/citas/{id}'
    metadata:
      groupName: Citas
      groupDescription: ''
      subgroup: |-
        Admin

        Delete an appointment

        Allows the administrator to delete an appointment and release the associated time slot.
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the appointment.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"message": "Cita eliminada con Ã©xito"}'
        headers: []
        description: ''
        custom: []
      -
        status: 401
        content: '{"message": "Unauthenticated."}'
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: '{"message": "Cita no encontrada"}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/citas
    metadata:
      groupName: Citas
      groupDescription: ''
      subgroup: |-
        Administrador

        Listar todas las citas

        Obtiene una lista de todas las citas registradas en el sistema. Este endpoint estÃ¡ restringido a administradores.
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          [
            {
              "id": 1,
              "id_paciente": 3,
              "id_doctor": 2,
              "fecha_cita": "2025-10-01",
              "hora_cita": "14:30:00",
              "lugar": "Consultorio 101",
              "motivo": "Consulta general",
              "created_at": "2025-09-01T10:00:00.000000Z",
              "updated_at": "2025-09-01T10:00:00.000000Z"
            }
          ]
        headers: []
        description: ''
        custom: []
      -
        status: 401
        content: '{"message": "No autenticado."}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/citas/{id}'
    metadata:
      groupName: Citas
      groupDescription: ''
      subgroup: |-
        Admin

        Get appointment details

        Retrieves the details of a specific appointment by its ID. This endpoint is restricted to administrators.
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the appointment.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "id": 1,
            "id_paciente": 3,
            "id_doctor": 2,
            "fecha_cita": "2025-10-01",
            "hora_cita": "14:30:00",
            "lugar": "Consultorio 101",
            "motivo": "Consulta general",
            "created_at": "2025-09-01T10:00:00.000000Z",
            "updated_at": "2025-09-01T10:00:00.000000Z"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 401
        content: '{"message": "Unauthenticated."}'
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: '{"message": "Cita no encontrada"}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/countCitas
    metadata:
      groupName: Citas
      groupDescription: ''
      subgroup: |-
        Admin

        Count appointments

        Returns the total number of appointments registered in the system.
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"total": 150}'
        headers: []
        description: ''
        custom: []
      -
        status: 401
        content: '{"message": "Unauthenticated."}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
