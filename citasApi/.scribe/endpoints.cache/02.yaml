## Autogenerated by Scribe. DO NOT MODIFY.

name: 'Gestión de Usuarios'
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/mi-perfil
    metadata:
      groupName: 'Gestión de Usuarios'
      groupDescription: ''
      subgroup: |-
        Pacientes

        Ver mi información

        Devuelve los datos del paciente autenticado.
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
             "id": 1,
             "nombres": "Juan",
             "apellidos": "Pérez",
             "documento": "12345678",
             "telefono": "3001234567"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
             "message": "Paciente no encontrado"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: api/mi-perfil
    metadata:
      groupName: 'Gestión de Usuarios'
      groupDescription: ''
      subgroup: |-
        Pacientes

        Actualizar mi información

        Permite al paciente autenticado actualizar sus datos personales.
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      nombres:
        name: nombres
        description: 'Nombre del paciente.'
        required: false
        example: Juan
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      apellidos:
        name: apellidos
        description: 'Apellido del paciente.'
        required: false
        example: Pérez
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      telefono:
        name: telefono
        description: 'Número telefónico.'
        required: false
        example: '3001234567'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      alergias:
        name: alergias
        description: 'Alergias conocidas.'
        required: false
        example: Ninguna
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      comentarios:
        name: comentarios
        description: 'Comentarios adicionales.'
        required: false
        example: 'Paciente estable'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
    cleanBodyParameters:
      nombres: Juan
      apellidos: Pérez
      telefono: '3001234567'
      alergias: Ninguna
      comentarios: 'Paciente estable'
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
             "id": 1,
             "nombres": "Juan",
             "apellidos": "Pérez",
             "telefono": "3001234567"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
             "message": "Paciente no encontrado"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
             "errors": {
                "nombres": ["El campo nombres es obligatorio"]
             }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/mi-perfil-admin
    metadata:
      groupName: 'Gestión de Usuarios'
      groupDescription: ''
      subgroup: |-
        Administrators

        Get my profile

        Retrieves the profile information of the authenticated administrator.
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "id": 1,
            "nombres": "Carlos",
            "apellidos": "Pérez",
            "cedula": "12345678",
            "telefono": "3001234567",
            "user_id": 5,
            "created_at": "2025-09-01T10:00:00.000000Z",
            "updated_at": "2025-09-01T10:00:00.000000Z"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 401
        content: '{"message": "Unauthenticated."}'
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: '{"message": "Administrador no encontrado"}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: api/mi-perfil-admin
    metadata:
      groupName: 'Gestión de Usuarios'
      groupDescription: ''
      subgroup: |-
        Administrators

        Update my profile

        Allows the authenticated administrator to update their own profile information.
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      nombres:
        name: nombres
        description: 'optional First names of the administrator.'
        required: false
        example: Carlos
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      apellidos:
        name: apellidos
        description: 'optional Last names of the administrator.'
        required: false
        example: Pérez
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      cedula:
        name: cedula
        description: 'optional ID card number of the administrator.'
        required: false
        example: '12345678'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      telefono:
        name: telefono
        description: 'optional Phone number of the administrator.'
        required: false
        example: '3001234567'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      nombres: Carlos
      apellidos: Pérez
      cedula: '12345678'
      telefono: '3001234567'
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "id": 1,
            "nombres": "Carlos",
            "apellidos": "Pérez",
            "cedula": "12345678",
            "telefono": "3001234567",
            "user_id": 5,
            "created_at": "2025-09-01T10:00:00.000000Z",
            "updated_at": "2025-09-01T10:00:00.000000Z"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 401
        content: '{"message": "Unauthenticated."}'
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: '{"message": "Administrador no encontrado"}'
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: '{"errors": {"cedula": ["The cedula has already been taken."]}}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/pacientes
    metadata:
      groupName: 'Gestión de Usuarios'
      groupDescription: ''
      subgroup: |-
        Pacientes

        Listar todos los pacientes

        Devuelve la lista completa de pacientes registrados en el sistema.
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          [
           {
             "id": 1,
             "nombres": "Juan",
             "apellidos": "Pérez",
             "documento": "12345678",
             "telefono": "3001234567"
           }
          ]
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/pacientes/{id}'
    metadata:
      groupName: 'Gestión de Usuarios'
      groupDescription: ''
      subgroup: |-
        Pacientes

        Ver un paciente específico

        Obtiene los datos completos de un paciente a partir de su ID.
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'ID del paciente a consultar.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
             "id": 1,
             "nombres": "Juan",
             "apellidos": "Pérez",
             "documento": "12345678",
             "telefono": "3001234567"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
             "message": "Paciente no encontrado"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/pacientes/{id}'
    metadata:
      groupName: 'Gestión de Usuarios'
      groupDescription: ''
      subgroup: |-
        Pacientes

        Actualizar un paciente

        Permite al administrador modificar los datos de un paciente específico.
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'ID del paciente a actualizar.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      nombres:
        name: nombres
        description: 'Nombre del paciente.'
        required: false
        example: Juan
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      apellidos:
        name: apellidos
        description: 'Apellido del paciente.'
        required: false
        example: Pérez
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      documento:
        name: documento
        description: 'Documento de identidad.'
        required: false
        example: '12345678'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      rh:
        name: rh
        description: 'Grupo sanguíneo.'
        required: false
        example: O+
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      fecha_nacimiento:
        name: fecha_nacimiento
        description: 'Fecha de nacimiento.'
        required: false
        example: '1990-05-12'
        type: date
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      genero:
        name: genero
        description: 'Género (M o F).'
        required: false
        example: M
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      edad:
        name: edad
        description: 'Edad del paciente.'
        required: false
        example: 30
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      telefono:
        name: telefono
        description: 'Número telefónico.'
        required: false
        example: '3001234567'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      alergias:
        name: alergias
        description: 'Alergias del paciente.'
        required: false
        example: Ninguna
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      comentarios:
        name: comentarios
        description: 'Comentarios adicionales.'
        required: false
        example: 'Paciente estable'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
    cleanBodyParameters:
      nombres: Juan
      apellidos: Pérez
      documento: '12345678'
      rh: O+
      fecha_nacimiento: '1990-05-12'
      genero: M
      edad: 30
      telefono: '3001234567'
      alergias: Ninguna
      comentarios: 'Paciente estable'
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
             "id": 1,
             "nombres": "Juan",
             "apellidos": "Pérez",
             "telefono": "3001234567"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
             "message": "Paciente no encontrado"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
             "errors": {
                "nombres": ["El campo nombres es obligatorio"]
             }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/pacientes/{id}'
    metadata:
      groupName: 'Gestión de Usuarios'
      groupDescription: ''
      subgroup: |-
        Pacientes

        Eliminar un paciente

        Permite al administrador eliminar un paciente del sistema.
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'ID del paciente a eliminar.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
             "message": "Paciente eliminado con éxito"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
             "message": "Paciente no encontrado"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/countPacientes
    metadata:
      groupName: 'Gestión de Usuarios'
      groupDescription: ''
      subgroup: |-
        Pacientes

        Contar total de pacientes

        Devuelve el número total de pacientes registrados en el sistema.
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
             "total": 10
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/administradores
    metadata:
      groupName: 'Gestión de Usuarios'
      groupDescription: ''
      subgroup: |-
        Administrators

        List all administrators

        Retrieves a list of all registered administrators in the system.
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          [
            {
              "id": 1,
              "nombres": "Carlos",
              "apellidos": "Pérez",
              "cedula": "12345678",
              "telefono": "3001234567",
              "user_id": 5,
              "created_at": "2025-09-01T10:00:00.000000Z",
              "updated_at": "2025-09-01T10:00:00.000000Z"
            }
          ]
        headers: []
        description: ''
        custom: []
      -
        status: 401
        content: '{"message": "Unauthenticated."}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/administradores/{id}'
    metadata:
      groupName: 'Gestión de Usuarios'
      groupDescription: ''
      subgroup: |-
        Administrators

        Get administrator details

        Retrieves the details of a specific administrator by their ID.
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the administrator.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "id": 1,
            "nombres": "Carlos",
            "apellidos": "Pérez",
            "cedula": "12345678",
            "telefono": "3001234567",
            "user_id": 5,
            "created_at": "2025-09-01T10:00:00.000000Z",
            "updated_at": "2025-09-01T10:00:00.000000Z"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 401
        content: '{"message": "Unauthenticated."}'
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: '{"message": "Administrador no encontrado"}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/administradores/{id}'
    metadata:
      groupName: 'Gestión de Usuarios'
      groupDescription: ''
      subgroup: |-
        Administrators

        Update administrator

        Allows updating the details of a specific administrator.
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the administrator.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      nombres:
        name: nombres
        description: 'optional First names of the administrator.'
        required: false
        example: Carlos
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      apellidos:
        name: apellidos
        description: 'optional Last names of the administrator.'
        required: false
        example: Pérez
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      cedula:
        name: cedula
        description: 'optional ID card number of the administrator.'
        required: false
        example: '12345678'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      telefono:
        name: telefono
        description: 'optional Phone number of the administrator.'
        required: false
        example: '3001234567'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      nombres: Carlos
      apellidos: Pérez
      cedula: '12345678'
      telefono: '3001234567'
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "id": 1,
            "nombres": "Carlos",
            "apellidos": "Pérez",
            "cedula": "12345678",
            "telefono": "3001234567",
            "user_id": 5,
            "created_at": "2025-09-01T10:00:00.000000Z",
            "updated_at": "2025-09-01T10:00:00.000000Z"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 401
        content: '{"message": "Unauthenticated."}'
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: '{"message": "Administrador no encontrado"}'
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: '{"errors": {"cedula": ["The cedula has already been taken."]}}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/administradores/{id}'
    metadata:
      groupName: 'Gestión de Usuarios'
      groupDescription: ''
      subgroup: |-
        Administratorsistrators

        Delete administrator

        Allows deleting an administrator from the system.
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the administrator.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"message": "Administrador eliminado con éxito"}'
        headers: []
        description: ''
        custom: []
      -
        status: 401
        content: '{"message": "Unauthenticated."}'
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: '{"message": "Administrador no encontrado"}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/countAdministradores
    metadata:
      groupName: 'Gestión de Usuarios'
      groupDescription: ''
      subgroup: |-
        Administrators

        Count administrators

        Returns the total number of registered administrators in the system.
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"total": 5}'
        headers: []
        description: ''
        custom: []
      -
        status: 401
        content: '{"message": "Unauthenticated."}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
