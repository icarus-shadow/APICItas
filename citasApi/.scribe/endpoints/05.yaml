name: 'Gestión de Usuarios [ADMIN]'
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: 'api/doctor/{id}'
    metadata:
      groupName: 'Gestión de Usuarios [ADMIN]'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: |-
        Ver un doctor

        Devuelve los datos de un doctor específico por su ID.
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'ID del doctor.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
             "id": 1,
             "nombres": "Pedro",
             "apellidos": "López",
             "especialidad": "Cardiología"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
             "message": "Doctor no encontrado"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/doctor/{id}'
    metadata:
      groupName: 'Gestión de Usuarios [ADMIN]'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: |-
        Actualizar un doctor

        Permite al administrador actualizar los datos de un doctor por ID.
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'ID del doctor.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      nombres:
        name: nombres
        description: 'Nombre del doctor.'
        required: false
        example: Pedro
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      apellidos:
        name: apellidos
        description: 'Apellido del doctor.'
        required: false
        example: López
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      cedula:
        name: cedula
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      lugar_trabajo:
        name: lugar_trabajo
        description: 'Must not be greater than 255 characters.'
        required: false
        example: qxbajwbpilpmufinllwlo
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      telefono:
        name: telefono
        description: 'Número telefónico.'
        required: false
        example: '3012345678'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      especialidad:
        name: especialidad
        description: 'ID de la especialidad.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      horarios_asignados:
        name: horarios_asignados
        description: ''
        required: false
        example: null
        type: 'object[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      'horarios_asignados[].id':
        name: 'horarios_asignados[].id'
        description: 'The <code>id</code> of an existing record in the horarios table.'
        required: false
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      'horarios_asignados[].nombre':
        name: 'horarios_asignados[].nombre'
        description: ''
        required: false
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      horario:
        name: horario
        description: 'ID del horario a asignar (opcional).'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      nombres: Pedro
      apellidos: López
      lugar_trabajo: qxbajwbpilpmufinllwlo
      telefono: '3012345678'
      especialidad: 1
      horarios_asignados:
        -
          id: 17
          nombre: consequatur
      horario: 1
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
             "id": 1,
             "nombres": "Pedro",
             "apellidos": "López"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
             "message": "Doctor no encontrado"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
             "error": "Conflicto de horarios detectado"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/doctor/{id}'
    metadata:
      groupName: 'Gestión de Usuarios [ADMIN]'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: |-
        Eliminar un doctor

        Permite al administrador eliminar un doctor por ID.
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'ID del doctor.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
             "message": "Doctor eliminado con éxito"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
             "message": "Doctor no encontrado"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/countDoctores
    metadata:
      groupName: 'Gestión de Usuarios [ADMIN]'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: |-
        Contar doctores

        Devuelve el número total de doctores registrados en el sistema.
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
             "total": 10
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/doctores
    metadata:
      groupName: 'Gestión de Usuarios [ADMIN]'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: |-
        Listar doctores

        Devuelve la lista completa de doctores registrados en el sistema.
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          [
            {
               "id": 1,
               "nombres": "Pedro",
               "apellidos": "López",
               "especialidad": "Cardiología"
            }
          ]
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
