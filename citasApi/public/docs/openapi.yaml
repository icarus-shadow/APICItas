openapi: 3.0.3
info:
  title: 'Laravel - Documentación de la API'
  description: 'API de Citas Médicas - Una API RESTful para la gestión de citas médicas, doctores, pacientes y horarios.'
  version: 1.0.0
servers:
  -
    url: 'http://127.0.0.1:8000'
tags:
  -
    name: Administradores
    description: ''
  -
    name: 'Administradores [ADMIN]'
    description: ''
  -
    name: 'Citas [ADMIN]'
    description: ''
  -
    name: Consultas
    description: ''
  -
    name: 'Consultas [ADMIN]'
    description: ''
  -
    name: Doctores
    description: ''
  -
    name: 'Doctores [ADMIN]'
    description: ''
  -
    name: 'Doctores [AUTENTICADO]'
    description: ''
  -
    name: Endpoints
    description: ''
  -
    name: 'Especialidades [ADMIN]'
    description: ''
  -
    name: 'Especialidades [PUBLICO AUTENTICADO]'
    description: ''
  -
    name: 'Horarios [ADMIN/DOCTOR]'
    description: ''
  -
    name: 'Horarios [ADMIN]'
    description: ''
  -
    name: 'Horarios [DOCTOR]'
    description: ''
  -
    name: Pacientes
    description: ''
  -
    name: 'Pacientes [ADMIN]'
    description: ''
  -
    name: 'Pacientes [AUTENTICADO]'
    description: ''
components:
  securitySchemes:
    default:
      type: http
      scheme: bearer
      description: 'Puedes obtener tu token visitando tu panel de control y haciendo clic en <b>Generar token de API</b>.'
security:
  -
    default: []
paths:
  /api/registrar-administrador:
    post:
      summary: "Registrar un nuevo administrador\n\nEste endpoint permite crear un administrador y su usuario asociado en el sistema. Se ejecuta dentro de\nuna transacción para garantizar la integridad de los datos. El usuario se crea con el rol de administrador (id_rol = 3)."
      operationId: registrarUnNuevoAdministradorEsteEndpointPermiteCrearUnAdministradorYSuUsuarioAsociadoEnElSistemaSeEjecutaDentroDeUnaTransaccinParaGarantizarLaIntegridadDeLosDatosElUsuarioSeCreaConElRolDeAdministradoridRol3
      description: ''
      parameters: []
      responses:
        201:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Administrador registrado correctamente'
                  user:
                    id: 12
                    email: admin@example.com
                    id_rol: 3
                    created_at: '2025-09-05T10:00:00.000000Z'
                  administrador:
                    id: 3
                    user_id: 12
                    nombres: María
                    apellidos: 'Rodríguez López'
                    cedula: '987654321'
                    telefono: '3109876543'
                properties:
                  message:
                    type: string
                    example: 'Administrador registrado correctamente'
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 12
                      email:
                        type: string
                        example: admin@example.com
                      id_rol:
                        type: integer
                        example: 3
                      created_at:
                        type: string
                        example: '2025-09-05T10:00:00.000000Z'
                  administrador:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 3
                      user_id:
                        type: integer
                        example: 12
                      nombres:
                        type: string
                        example: María
                      apellidos:
                        type: string
                        example: 'Rodríguez López'
                      cedula:
                        type: string
                        example: '987654321'
                      telefono:
                        type: string
                        example: '3109876543'
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The given data was invalid.'
                  errors:
                    email:
                      - 'El campo email es obligatorio.'
                properties:
                  message:
                    type: string
                    example: 'The given data was invalid.'
                  errors:
                    type: object
                    properties:
                      email:
                        type: array
                        example:
                          - 'El campo email es obligatorio.'
                        items:
                          type: string
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Error al registrar administrador'
                  error: 'Detalle del error interno'
                properties:
                  message:
                    type: string
                    example: 'Error al registrar administrador'
                  error:
                    type: string
                    example: 'Detalle del error interno'
      tags:
        - Administradores
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'Correo electrónico único del usuario.'
                  example: admin@example.com
                  nullable: false
                password:
                  type: string
                  description: 'Contraseña del usuario, mínimo 6 caracteres.'
                  example: secret123
                  nullable: false
                nombres:
                  type: string
                  description: 'Nombres completos del administrador.'
                  example: María
                  nullable: false
                apellidos:
                  type: string
                  description: 'Apellidos completos del administrador.'
                  example: 'Rodríguez López'
                  nullable: false
                cedula:
                  type: string
                  description: 'Cédula única del administrador.'
                  example: '987654321'
                  nullable: false
                telefono:
                  type: string
                  description: 'Teléfono de contacto del administrador.'
                  example: '3109876543'
                  nullable: false
              required:
                - email
                - password
                - nombres
                - apellidos
                - cedula
                - telefono
      security: []
  /api/administradores:
    get:
      summary: "Listar administradores\n\nDevuelve una lista de todos los administradores registrados."
      operationId: listarAdministradoresDevuelveUnaListaDeTodosLosAdministradoresRegistrados
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    id: 1
                    nombres: Carlos
                    apellidos: Pérez
                    cedula: '12345678'
                    telefono: '3001234567'
                    user_id: 5
      tags:
        - 'Administradores [ADMIN]'
  '/api/administradores/{id}':
    get:
      summary: "Ver administrador\n\nDevuelve los datos de un administrador específico."
      operationId: verAdministradorDevuelveLosDatosDeUnAdministradorEspecfico
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 1
                  nombres: Carlos
                  apellidos: Pérez
                  cedula: '12345678'
                  telefono: '3001234567'
                  user_id: 5
                properties:
                  id:
                    type: integer
                    example: 1
                  nombres:
                    type: string
                    example: Carlos
                  apellidos:
                    type: string
                    example: Pérez
                  cedula:
                    type: string
                    example: '12345678'
                  telefono:
                    type: string
                    example: '3001234567'
                  user_id:
                    type: integer
                    example: 5
      tags:
        - 'Administradores [ADMIN]'
    put:
      summary: "Actualizar administrador\n\nPermite modificar los datos de un administrador."
      operationId: actualizarAdministradorPermiteModificarLosDatosDeUnAdministrador
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 1
                  nombres: Carlos
                  apellidos: Pérez
                  cedula: '12345678'
                  telefono: '3001234567'
                  user_id: 5
                properties:
                  id:
                    type: integer
                    example: 1
                  nombres:
                    type: string
                    example: Carlos
                  apellidos:
                    type: string
                    example: Pérez
                  cedula:
                    type: string
                    example: '12345678'
                  telefono:
                    type: string
                    example: '3001234567'
                  user_id:
                    type: integer
                    example: 5
      tags:
        - 'Administradores [ADMIN]'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                nombres:
                  type: string
                  description: 'Nombres del administrador.'
                  example: Carlos
                  nullable: false
                apellidos:
                  type: string
                  description: 'Apellidos del administrador.'
                  example: Pérez
                  nullable: false
                cedula:
                  type: string
                  description: 'Cédula del administrador.'
                  example: '12345678'
                  nullable: false
                telefono:
                  type: string
                  description: 'Teléfono del administrador.'
                  example: '3001234567'
                  nullable: false
    delete:
      summary: "Eliminar administrador\n\nPermite eliminar un administrador del sistema."
      operationId: eliminarAdministradorPermiteEliminarUnAdministradorDelSistema
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Administrador eliminado con éxito'
                properties:
                  message:
                    type: string
                    example: 'Administrador eliminado con éxito'
      tags:
        - 'Administradores [ADMIN]'
    parameters:
      -
        in: path
        name: id
        description: 'Optional parameter. ID del administrador.'
        required: true
        schema:
          type: integer
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: 1
  /api/citas:
    get:
      summary: "Listar todas las citas\n\nDevuelve todas las citas registradas en el sistema."
      operationId: listarTodasLasCitasDevuelveTodasLasCitasRegistradasEnElSistema
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    id: 1
                    id_paciente: 3
                    id_doctor: 2
                    id_horario: 5
                    motivo: 'Consulta general'
      tags:
        - 'Citas [ADMIN]'
  '/api/citas/{id}':
    get:
      summary: "Ver una cita\n\nDevuelve los detalles de una cita específica."
      operationId: verUnaCitaDevuelveLosDetallesDeUnaCitaEspecfica
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 1
                  id_paciente: 3
                  id_doctor: 2
                  id_horario: 5
                  motivo: 'Consulta general'
                properties:
                  id:
                    type: integer
                    example: 1
                  id_paciente:
                    type: integer
                    example: 3
                  id_doctor:
                    type: integer
                    example: 2
                  id_horario:
                    type: integer
                    example: 5
                  motivo:
                    type: string
                    example: 'Consulta general'
      tags:
        - 'Citas [ADMIN]'
    delete:
      summary: "Eliminar una cita\n\nPermite al administrador eliminar una cita y liberar el horario."
      operationId: eliminarUnaCitaPermiteAlAdministradorEliminarUnaCitaYLiberarElHorario
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Cita eliminada con éxito'
                properties:
                  message:
                    type: string
                    example: 'Cita eliminada con éxito'
      tags:
        - 'Citas [ADMIN]'
    put:
      summary: "Editar cualquier cita\n\nPermite al administrador modificar el motivo de una cita."
      operationId: editarCualquierCitaPermiteAlAdministradorModificarElMotivoDeUnaCita
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 1
                  motivo: 'Revisión general'
                properties:
                  id:
                    type: integer
                    example: 1
                  motivo:
                    type: string
                    example: 'Revisión general'
      tags:
        - 'Citas [ADMIN]'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                motivo:
                  type: string
                  description: 'Nuevo motivo.'
                  example: 'Revisión general'
                  nullable: false
    parameters:
      -
        in: path
        name: id
        description: 'Optional parameter. ID de la cita.'
        required: true
        schema:
          type: integer
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: 1
  '/api/horarios/compactados/{id_doctor}':
    get:
      summary: "Horarios compactados por doctor\n\nDevuelve los horarios del doctor agrupados en rangos grandes, en lugar de intervalos de 30 minutos."
      operationId: horariosCompactadosPorDoctorDevuelveLosHorariosDelDoctorAgrupadosEnRangosGrandesEnLugarDeIntervalosDe30Minutos
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    dia: 1
                    rango: '08:00 - 12:00'
      tags:
        - Consultas
    parameters:
      -
        in: path
        name: id_doctor
        description: 'Optional parameter. ID del doctor.'
        required: true
        schema:
          type: integer
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: 2
  '/api/doctores/especialidad/{id}':
    get:
      summary: "Doctores por especialidad\n\nLista todos los doctores que pertenecen a una especialidad específica."
      operationId: doctoresPorEspecialidadListaTodosLosDoctoresQuePertenecenAUnaEspecialidadEspecfica
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    id: 1
                    nombres: Juan
                    apellidos: López
                    especialidad: Cardiología
      tags:
        - Consultas
    parameters:
      -
        in: path
        name: id
        description: 'Optional parameter. ID de la especialidad.'
        required: true
        schema:
          type: integer
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: 3
  '/api/doctor/{id}/disponibilidad':
    get:
      summary: "Disponibilidad de un doctor\n\nDevuelve los horarios disponibles (disponible = true) de un doctor para agendar cita."
      operationId: disponibilidadDeUnDoctorDevuelveLosHorariosDisponiblesdisponibleTrueDeUnDoctorParaAgendarCita
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    dia: 1
                    hora_inicio: '08:00'
                    hora_fin: '08:30'
                    disponible: true
      tags:
        - Consultas
    parameters:
      -
        in: path
        name: id
        description: 'Optional parameter. ID del doctor.'
        required: true
        schema:
          type: integer
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: 2
  /api/citas/mis-citas:
    get:
      summary: "Mis citas\n\nMuestra el historial de citas del usuario autenticado (paciente o doctor)."
      operationId: misCitasMuestraElHistorialDeCitasDelUsuarioAutenticadopacienteODoctor
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    fecha: '2025-09-10'
                    estado: pendiente
                    doctor: 'Juan Pérez'
      tags:
        - Consultas
  /api/doctor/mis-pacientes:
    get:
      summary: "Pacientes atendidos por doctor\n\nDevuelve un listado de pacientes que el doctor autenticado ha atendido, con filtro opcional por fechas."
      operationId: pacientesAtendidosPorDoctorDevuelveUnListadoDePacientesQueElDoctorAutenticadoHaAtendidoConFiltroOpcionalPorFechas
      description: ''
      parameters:
        -
          in: query
          name: fecha_inicio
          description: 'date Fecha inicial del filtro.'
          example: '2025-09-01'
          required: false
          schema:
            type: string
            description: 'date Fecha inicial del filtro.'
            example: '2025-09-01'
            nullable: false
        -
          in: query
          name: fecha_fin
          description: 'date Fecha final del filtro.'
          example: '2025-09-30'
          required: false
          schema:
            type: string
            description: 'date Fecha final del filtro.'
            example: '2025-09-30'
            nullable: false
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    paciente: 'María Gómez'
                    fecha: '2025-09-05'
      tags:
        - Consultas
  /api/reportes/citas-por-especialidad:
    get:
      summary: "Reporte de citas por especialidad\n\nDevuelve el total de citas agrupadas por especialidad."
      operationId: reporteDeCitasPorEspecialidadDevuelveElTotalDeCitasAgrupadasPorEspecialidad
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    especialidad: Cardiología
                    total_citas: 15
      tags:
        - 'Consultas [ADMIN]'
  /api/registrar-doctor:
    post:
      summary: "Registrar un nuevo doctor\n\nEste endpoint permite crear un doctor y su usuario asociado en el sistema. Se ejecuta dentro de\nuna transacción para garantizar la integridad de los datos. El usuario se crea con el rol de doctor (id_rol = 2)."
      operationId: registrarUnNuevoDoctorEsteEndpointPermiteCrearUnDoctorYSuUsuarioAsociadoEnElSistemaSeEjecutaDentroDeUnaTransaccinParaGarantizarLaIntegridadDeLosDatosElUsuarioSeCreaConElRolDeDoctoridRol2
      description: ''
      parameters: []
      responses:
        201:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Doctor registrado correctamente'
                  user:
                    id: 15
                    email: doctor@example.com
                    id_rol: 2
                    created_at: '2025-09-05T10:00:00.000000Z'
                  doctor:
                    id: 7
                    user_id: 15
                    nombres: Andrés
                    apellidos: 'García López'
                    cedula: '1122334455'
                    id_especialidades: 1
                    horario: 'Lunes a Viernes 8:00 AM - 4:00 PM'
                    lugar_trabajo: 'Hospital Central'
                properties:
                  message:
                    type: string
                    example: 'Doctor registrado correctamente'
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 15
                      email:
                        type: string
                        example: doctor@example.com
                      id_rol:
                        type: integer
                        example: 2
                      created_at:
                        type: string
                        example: '2025-09-05T10:00:00.000000Z'
                  doctor:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 7
                      user_id:
                        type: integer
                        example: 15
                      nombres:
                        type: string
                        example: Andrés
                      apellidos:
                        type: string
                        example: 'García López'
                      cedula:
                        type: string
                        example: '1122334455'
                      id_especialidades:
                        type: integer
                        example: 1
                      horario:
                        type: string
                        example: 'Lunes a Viernes 8:00 AM - 4:00 PM'
                      lugar_trabajo:
                        type: string
                        example: 'Hospital Central'
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The given data was invalid.'
                  errors:
                    email:
                      - 'El campo email es obligatorio.'
                properties:
                  message:
                    type: string
                    example: 'The given data was invalid.'
                  errors:
                    type: object
                    properties:
                      email:
                        type: array
                        example:
                          - 'El campo email es obligatorio.'
                        items:
                          type: string
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Error al registrar doctor'
                  error: 'Detalle del error interno'
                properties:
                  message:
                    type: string
                    example: 'Error al registrar doctor'
                  error:
                    type: string
                    example: 'Detalle del error interno'
      tags:
        - Doctores
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'Correo electrónico único del usuario.'
                  example: doctor@example.com
                  nullable: false
                password:
                  type: string
                  description: 'Contraseña del usuario, mínimo 6 caracteres.'
                  example: secret123
                  nullable: false
                nombres:
                  type: string
                  description: 'Nombres completos del doctor.'
                  example: Andrés
                  nullable: false
                apellidos:
                  type: string
                  description: 'Apellidos completos del doctor.'
                  example: 'García López'
                  nullable: false
                cedula:
                  type: string
                  description: 'Cédula única del doctor.'
                  example: '1122334455'
                  nullable: false
                id_especialidades:
                  type: integer
                  description: 'ID de la especialidad a la que pertenece el doctor.'
                  example: 1
                  nullable: false
                horario:
                  type: string
                  description: 'Horario de atención del doctor.'
                  example: 'Lunes a Viernes 8:00 AM - 4:00 PM'
                  nullable: true
                lugar_trabajo:
                  type: string
                  description: 'Lugar donde atiende el doctor.'
                  example: 'Hospital Central'
                  nullable: true
              required:
                - email
                - password
                - nombres
                - apellidos
                - cedula
                - id_especialidades
      security: []
  '/api/doctor/{id}':
    get:
      summary: "Ver un doctor\n\nDevuelve los datos de un doctor específico por su ID."
      operationId: verUnDoctorDevuelveLosDatosDeUnDoctorEspecficoPorSuID
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 1
                  nombres: Pedro
                  apellidos: López
                  especialidad: Cardiología
                properties:
                  id:
                    type: integer
                    example: 1
                  nombres:
                    type: string
                    example: Pedro
                  apellidos:
                    type: string
                    example: López
                  especialidad:
                    type: string
                    example: Cardiología
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Doctor no encontrado'
                properties:
                  message:
                    type: string
                    example: 'Doctor no encontrado'
      tags:
        - 'Doctores [ADMIN]'
    put:
      summary: "Actualizar un doctor\n\nPermite al administrador actualizar los datos de un doctor por ID."
      operationId: actualizarUnDoctorPermiteAlAdministradorActualizarLosDatosDeUnDoctorPorID
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 1
                  nombres: Pedro
                  apellidos: López
                properties:
                  id:
                    type: integer
                    example: 1
                  nombres:
                    type: string
                    example: Pedro
                  apellidos:
                    type: string
                    example: López
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Doctor no encontrado'
                properties:
                  message:
                    type: string
                    example: 'Doctor no encontrado'
      tags:
        - 'Doctores [ADMIN]'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                nombres:
                  type: string
                  description: 'Nombre del doctor.'
                  example: Pedro
                  nullable: false
                apellidos:
                  type: string
                  description: 'Apellido del doctor.'
                  example: López
                  nullable: false
                telefono:
                  type: string
                  description: 'Número telefónico.'
                  example: '3012345678'
                  nullable: false
                especialidad_id:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the especialidades table.'
                  example: 17
                  nullable: false
    delete:
      summary: "Eliminar un doctor\n\nPermite al administrador eliminar un doctor por ID."
      operationId: eliminarUnDoctorPermiteAlAdministradorEliminarUnDoctorPorID
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Doctor eliminado con éxito'
                properties:
                  message:
                    type: string
                    example: 'Doctor eliminado con éxito'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Doctor no encontrado'
                properties:
                  message:
                    type: string
                    example: 'Doctor no encontrado'
      tags:
        - 'Doctores [ADMIN]'
    parameters:
      -
        in: path
        name: id
        description: 'Optional parameter. ID del doctor.'
        required: true
        schema:
          type: integer
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: 1
  /api/doctores:
    get:
      summary: "Listar doctores\n\nDevuelve la lista completa de doctores registrados en el sistema."
      operationId: listarDoctoresDevuelveLaListaCompletaDeDoctoresRegistradosEnElSistema
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    id: 1
                    nombres: Pedro
                    apellidos: López
                    especialidad: Cardiología
      tags:
        - 'Doctores [ADMIN]'
  /api/mi-perfil-doctor:
    get:
      summary: "Ver mi información (Doctor)\n\nDevuelve los datos del doctor autenticado."
      operationId: verMiInformacinDoctorDevuelveLosDatosDelDoctorAutenticado
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 1
                  nombres: Pedro
                  apellidos: López
                properties:
                  id:
                    type: integer
                    example: 1
                  nombres:
                    type: string
                    example: Pedro
                  apellidos:
                    type: string
                    example: López
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Doctor no encontrado'
                properties:
                  message:
                    type: string
                    example: 'Doctor no encontrado'
      tags:
        - 'Doctores [AUTENTICADO]'
    put:
      summary: "Actualizar mi información (Doctor)\n\nPermite al doctor autenticado actualizar sus propios datos."
      operationId: actualizarMiInformacinDoctorPermiteAlDoctorAutenticadoActualizarSusPropiosDatos
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 1
                  nombres: Pedro
                  apellidos: López
                properties:
                  id:
                    type: integer
                    example: 1
                  nombres:
                    type: string
                    example: Pedro
                  apellidos:
                    type: string
                    example: López
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Doctor no encontrado'
                properties:
                  message:
                    type: string
                    example: 'Doctor no encontrado'
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  errors:
                    nombres:
                      - 'El campo nombres debe ser una cadena de texto'
                properties:
                  errors:
                    type: object
                    properties:
                      nombres:
                        type: array
                        example:
                          - 'El campo nombres debe ser una cadena de texto'
                        items:
                          type: string
      tags:
        - 'Doctores [AUTENTICADO]'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                nombres:
                  type: string
                  description: 'Nombre del doctor.'
                  example: Pedro
                  nullable: false
                apellidos:
                  type: string
                  description: 'Apellido del doctor.'
                  example: López
                  nullable: false
                telefono:
                  type: string
                  description: 'Número telefónico.'
                  example: '3012345678'
                  nullable: false
    delete:
      summary: "Eliminar mi cuenta (Doctor)\n\nPermite al doctor autenticado eliminar su cuenta del sistema."
      operationId: eliminarMiCuentaDoctorPermiteAlDoctorAutenticadoEliminarSuCuentaDelSistema
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Doctor eliminado con éxito'
                properties:
                  message:
                    type: string
                    example: 'Doctor eliminado con éxito'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Doctor no encontrado'
                properties:
                  message:
                    type: string
                    example: 'Doctor no encontrado'
      tags:
        - 'Doctores [AUTENTICADO]'
  /api/logout:
    post:
      summary: ''
      operationId: postApiLogout
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
  /api/login:
    post:
      summary: ''
      operationId: postApiLogin
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: qkunze@example.com
                  nullable: false
                password:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
              required:
                - email
                - password
      security: []
  /api/especialidades:
    post:
      summary: "Crear especialidad\n\nPermite al administrador registrar una nueva especialidad."
      operationId: crearEspecialidadPermiteAlAdministradorRegistrarUnaNuevaEspecialidad
      description: ''
      parameters: []
      responses:
        201:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 1
                  nombre: Cardiología
                  descripcion: 'Especialidad del corazón'
                properties:
                  id:
                    type: integer
                    example: 1
                  nombre:
                    type: string
                    example: Cardiología
                  descripcion:
                    type: string
                    example: 'Especialidad del corazón'
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  errors:
                    nombre:
                      - 'El campo nombre es obligatorio'
                properties:
                  errors:
                    type: object
                    properties:
                      nombre:
                        type: array
                        example:
                          - 'El campo nombre es obligatorio'
                        items:
                          type: string
      tags:
        - 'Especialidades [ADMIN]'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                nombre:
                  type: string
                  description: 'Nombre de la especialidad.'
                  example: Cardiología
                  nullable: false
                descripcion:
                  type: string
                  description: 'Descripción de la especialidad.'
                  example: 'Tratamiento del corazón'
                  nullable: false
    get:
      summary: "Listar todas las especialidades\n\nDevuelve una lista de todas las especialidades registradas en el sistema."
      operationId: listarTodasLasEspecialidadesDevuelveUnaListaDeTodasLasEspecialidadesRegistradasEnElSistema
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    id: 1
                    nombre: Cardiología
                    descripcion: 'Especialidad del corazón'
      tags:
        - 'Especialidades [PUBLICO AUTENTICADO]'
  '/api/especialidades/{id}':
    put:
      summary: "Actualizar especialidad\n\nPermite al administrador actualizar los datos de una especialidad."
      operationId: actualizarEspecialidadPermiteAlAdministradorActualizarLosDatosDeUnaEspecialidad
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 1
                  nombre: Cardiología
                  descripcion: 'Especialidad actualizada'
                properties:
                  id:
                    type: integer
                    example: 1
                  nombre:
                    type: string
                    example: Cardiología
                  descripcion:
                    type: string
                    example: 'Especialidad actualizada'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Especialidad no encontrada'
                properties:
                  message:
                    type: string
                    example: 'Especialidad no encontrada'
      tags:
        - 'Especialidades [ADMIN]'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                nombre:
                  type: string
                  description: 'Nombre de la especialidad.'
                  example: Cardiología
                  nullable: false
                descripcion:
                  type: string
                  description: 'Descripción de la especialidad.'
                  example: 'Tratamiento del corazón'
                  nullable: false
    delete:
      summary: "Eliminar especialidad\n\nPermite al administrador eliminar una especialidad del sistema."
      operationId: eliminarEspecialidadPermiteAlAdministradorEliminarUnaEspecialidadDelSistema
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Especialidad eliminada con éxito'
                properties:
                  message:
                    type: string
                    example: 'Especialidad eliminada con éxito'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Especialidad no encontrada'
                properties:
                  message:
                    type: string
                    example: 'Especialidad no encontrada'
      tags:
        - 'Especialidades [ADMIN]'
    get:
      summary: "Ver una especialidad\n\nDevuelve los detalles de una especialidad específica."
      operationId: verUnaEspecialidadDevuelveLosDetallesDeUnaEspecialidadEspecfica
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 1
                  nombre: Cardiología
                  descripcion: 'Especialidad del corazón'
                properties:
                  id:
                    type: integer
                    example: 1
                  nombre:
                    type: string
                    example: Cardiología
                  descripcion:
                    type: string
                    example: 'Especialidad del corazón'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Especialidad no encontrada'
                properties:
                  message:
                    type: string
                    example: 'Especialidad no encontrada'
      tags:
        - 'Especialidades [PUBLICO AUTENTICADO]'
    parameters:
      -
        in: path
        name: id
        description: 'Optional parameter. ID de la especialidad.'
        required: true
        schema:
          type: integer
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: 1
  '/api/horarios/{id}':
    get:
      summary: "Ver un horario\n\nDevuelve la información de un intervalo de 30 minutos específico."
      operationId: verUnHorarioDevuelveLaInformacinDeUnIntervaloDe30MinutosEspecfico
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 1
                  id_doctor: 1
                  dia: 1
                  hora_inicio: '08:00'
                  hora_fin: '08:30'
                properties:
                  id:
                    type: integer
                    example: 1
                  id_doctor:
                    type: integer
                    example: 1
                  dia:
                    type: integer
                    example: 1
                  hora_inicio:
                    type: string
                    example: '08:00'
                  hora_fin:
                    type: string
                    example: '08:30'
      tags:
        - 'Horarios [ADMIN/DOCTOR]'
    put:
      summary: "Editar un intervalo\n\nPermite editar un intervalo de 30 minutos específico."
      operationId: editarUnIntervaloPermiteEditarUnIntervaloDe30MinutosEspecfico
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 1
                  hora_inicio: '09:00'
                  hora_fin: '09:30'
                properties:
                  id:
                    type: integer
                    example: 1
                  hora_inicio:
                    type: string
                    example: '09:00'
                  hora_fin:
                    type: string
                    example: '09:30'
      tags:
        - 'Horarios [ADMIN/DOCTOR]'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                hora_inicio:
                  type: string
                  description: 'Hora de inicio.'
                  example: '09:00'
                  nullable: false
                hora_fin:
                  type: string
                  description: 'Hora de fin.'
                  example: '09:30'
                  nullable: false
    delete:
      summary: "Eliminar un intervalo\n\nPermite eliminar un intervalo de 30 minutos."
      operationId: eliminarUnIntervaloPermiteEliminarUnIntervaloDe30Minutos
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Horario eliminado con éxito'
                properties:
                  message:
                    type: string
                    example: 'Horario eliminado con éxito'
      tags:
        - 'Horarios [ADMIN/DOCTOR]'
    parameters:
      -
        in: path
        name: id
        description: 'Optional parameter. ID del horario.'
        required: true
        schema:
          type: integer
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: 1
  /api/horarios:
    post:
      summary: "Crear horarios\n\nCrea horarios para un doctor a partir de un rango amplio, dividiéndolos en intervalos de 30 minutos."
      operationId: crearHorariosCreaHorariosParaUnDoctorAPartirDeUnRangoAmplioDividindolosEnIntervalosDe30Minutos
      description: ''
      parameters: []
      responses:
        201:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    id_doctor: 1
                    dia: 1
                    hora_inicio: '08:00'
                    hora_fin: '08:30'
      tags:
        - 'Horarios [ADMIN/DOCTOR]'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                dias:
                  type: array
                  description: 'Lista de días (1=Lunes, 7=Domingo).'
                  example:
                    - 1
                    - 3
                    - 5
                  items:
                    type: string
                hora_inicio:
                  type: string
                  description: 'Hora de inicio (HH:mm).'
                  example: '08:00'
                  nullable: false
                hora_fin:
                  type: string
                  description: 'Hora de fin (HH:mm).'
                  example: '12:00'
                  nullable: false
                id_doctor:
                  type: integer
                  description: 'ID del doctor (requerido para admin).'
                  example: 1
                  nullable: false
    get:
      summary: "Listar todos los horarios (compacto)\n\nDevuelve todos los horarios del sistema agrupados por rango grande (no por intervalos de 30 minutos)."
      operationId: listarTodosLosHorarioscompactoDevuelveTodosLosHorariosDelSistemaAgrupadosPorRangoGrandenoPorIntervalosDe30Minutos
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    id_doctor: 1
                    nombre_doctor: 'Juan Pérez'
                    dia: 1
                    rango: '08:00 - 12:00'
      tags:
        - 'Horarios [ADMIN]'
  /api/mis-horarios:
    post:
      summary: "Crear horarios\n\nCrea horarios para un doctor a partir de un rango amplio, dividiéndolos en intervalos de 30 minutos."
      operationId: crearHorariosCreaHorariosParaUnDoctorAPartirDeUnRangoAmplioDividindolosEnIntervalosDe30Minutos
      description: ''
      parameters: []
      responses:
        201:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    id_doctor: 1
                    dia: 1
                    hora_inicio: '08:00'
                    hora_fin: '08:30'
      tags:
        - 'Horarios [ADMIN/DOCTOR]'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                dias:
                  type: array
                  description: 'Lista de días (1=Lunes, 7=Domingo).'
                  example:
                    - 1
                    - 3
                    - 5
                  items:
                    type: string
                hora_inicio:
                  type: string
                  description: 'Hora de inicio (HH:mm).'
                  example: '08:00'
                  nullable: false
                hora_fin:
                  type: string
                  description: 'Hora de fin (HH:mm).'
                  example: '12:00'
                  nullable: false
                id_doctor:
                  type: integer
                  description: 'ID del doctor (requerido para admin).'
                  example: 1
                  nullable: false
    get:
      summary: "Listar mis horarios\n\nDevuelve todos los intervalos de 30 minutos del doctor autenticado."
      operationId: listarMisHorariosDevuelveTodosLosIntervalosDe30MinutosDelDoctorAutenticado
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    dia: 1
                    hora_inicio: '08:00'
                    hora_fin: '08:30'
      tags:
        - 'Horarios [DOCTOR]'
  '/api/mis-horarios/{id}':
    put:
      summary: "Editar un intervalo\n\nPermite editar un intervalo de 30 minutos específico."
      operationId: editarUnIntervaloPermiteEditarUnIntervaloDe30MinutosEspecfico
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 1
                  hora_inicio: '09:00'
                  hora_fin: '09:30'
                properties:
                  id:
                    type: integer
                    example: 1
                  hora_inicio:
                    type: string
                    example: '09:00'
                  hora_fin:
                    type: string
                    example: '09:30'
      tags:
        - 'Horarios [ADMIN/DOCTOR]'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                hora_inicio:
                  type: string
                  description: 'Hora de inicio.'
                  example: '09:00'
                  nullable: false
                hora_fin:
                  type: string
                  description: 'Hora de fin.'
                  example: '09:30'
                  nullable: false
    delete:
      summary: "Eliminar un intervalo\n\nPermite eliminar un intervalo de 30 minutos."
      operationId: eliminarUnIntervaloPermiteEliminarUnIntervaloDe30Minutos
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Horario eliminado con éxito'
                properties:
                  message:
                    type: string
                    example: 'Horario eliminado con éxito'
      tags:
        - 'Horarios [ADMIN/DOCTOR]'
    parameters:
      -
        in: path
        name: id
        description: 'Optional parameter. ID del horario.'
        required: true
        schema:
          type: integer
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: 1
  '/api/horarios-doctor/{id_doctor}':
    get:
      summary: "Listar horarios por doctor\n\nDevuelve todos los intervalos de 30 minutos de un doctor específico."
      operationId: listarHorariosPorDoctorDevuelveTodosLosIntervalosDe30MinutosDeUnDoctorEspecfico
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    dia: 1
                    hora_inicio: '08:00'
                    hora_fin: '08:30'
      tags:
        - 'Horarios [ADMIN]'
    parameters:
      -
        in: path
        name: id_doctor
        description: 'Optional parameter. ID del doctor.'
        required: true
        schema:
          type: integer
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: 1
  /api/registrar-paciente:
    post:
      summary: "Registrar un nuevo paciente\n\nEste endpoint permite crear un paciente y su usuario asociado en el sistema. Se ejecuta dentro de\nuna transacción para garantizar la integridad de los datos. El usuario se crea con el rol de paciente (id_rol = 1)."
      operationId: registrarUnNuevoPacienteEsteEndpointPermiteCrearUnPacienteYSuUsuarioAsociadoEnElSistemaSeEjecutaDentroDeUnaTransaccinParaGarantizarLaIntegridadDeLosDatosElUsuarioSeCreaConElRolDePacienteidRol1
      description: ''
      parameters: []
      responses:
        201:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Paciente registrado correctamente'
                  user:
                    id: 10
                    email: paciente@example.com
                    id_rol: 1
                    created_at: '2025-09-05T10:00:00.000000Z'
                  paciente:
                    id: 5
                    user_id: 10
                    nombres: Juan
                    apellidos: 'Pérez Gómez'
                    documento: '123456789'
                    rh: O+
                    fecha_nacimiento: '1990-05-15'
                    genero: M
                    edad: '33'
                    telefono: '3201234567'
                    alergias: Penicilina
                    comentarios: Ninguno
                properties:
                  message:
                    type: string
                    example: 'Paciente registrado correctamente'
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 10
                      email:
                        type: string
                        example: paciente@example.com
                      id_rol:
                        type: integer
                        example: 1
                      created_at:
                        type: string
                        example: '2025-09-05T10:00:00.000000Z'
                  paciente:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 5
                      user_id:
                        type: integer
                        example: 10
                      nombres:
                        type: string
                        example: Juan
                      apellidos:
                        type: string
                        example: 'Pérez Gómez'
                      documento:
                        type: string
                        example: '123456789'
                      rh:
                        type: string
                        example: O+
                      fecha_nacimiento:
                        type: string
                        example: '1990-05-15'
                      genero:
                        type: string
                        example: M
                      edad:
                        type: string
                        example: '33'
                      telefono:
                        type: string
                        example: '3201234567'
                      alergias:
                        type: string
                        example: Penicilina
                      comentarios:
                        type: string
                        example: Ninguno
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The given data was invalid.'
                  errors:
                    email:
                      - 'El campo email es obligatorio.'
                properties:
                  message:
                    type: string
                    example: 'The given data was invalid.'
                  errors:
                    type: object
                    properties:
                      email:
                        type: array
                        example:
                          - 'El campo email es obligatorio.'
                        items:
                          type: string
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Error al registrar paciente'
                  error: 'Detalle del error interno'
                properties:
                  message:
                    type: string
                    example: 'Error al registrar paciente'
                  error:
                    type: string
                    example: 'Detalle del error interno'
      tags:
        - Pacientes
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'Correo electrónico único del usuario.'
                  example: paciente@example.com
                  nullable: false
                password:
                  type: string
                  description: 'Contraseña del usuario, mínimo 6 caracteres.'
                  example: secret123
                  nullable: false
                nombres:
                  type: string
                  description: 'Nombres completos del paciente.'
                  example: Juan
                  nullable: false
                apellidos:
                  type: string
                  description: 'Apellidos completos del paciente.'
                  example: 'Pérez Gómez'
                  nullable: false
                documento:
                  type: string
                  description: 'Número de documento único.'
                  example: '123456789'
                  nullable: false
                rh:
                  type: string
                  description: 'Tipo de sangre del paciente.'
                  example: O+
                  nullable: false
                fecha_nacimiento:
                  type: date
                  description: 'Fecha de nacimiento en formato Y-m-d.'
                  example: '1990-05-15'
                  nullable: false
                genero:
                  type: string
                  description: 'Género del paciente (M o F).'
                  example: M
                  nullable: false
                edad:
                  type: string
                  description: 'Edad del paciente.'
                  example: '33'
                  nullable: false
                telefono:
                  type: string
                  description: 'Teléfono de contacto del paciente.'
                  example: '3201234567'
                  nullable: true
                alergias:
                  type: string
                  description: 'Alergias conocidas del paciente.'
                  example: Penicilina
                  nullable: true
                comentarios:
                  type: string
                  description: 'Comentarios adicionales.'
                  example: Ninguno
                  nullable: true
              required:
                - email
                - password
                - nombres
                - apellidos
                - documento
                - rh
                - fecha_nacimiento
                - genero
                - edad
      security: []
  /api/pacientes:
    get:
      summary: "Listar todos los pacientes\n\nDevuelve la lista completa de pacientes registrados en el sistema."
      operationId: listarTodosLosPacientesDevuelveLaListaCompletaDePacientesRegistradosEnElSistema
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    id: 1
                    nombres: Juan
                    apellidos: Pérez
                    documento: '12345678'
                    telefono: '3001234567'
      tags:
        - 'Pacientes [ADMIN]'
  '/api/pacientes/{id}':
    get:
      summary: "Ver un paciente específico\n\nObtiene los datos completos de un paciente a partir de su ID."
      operationId: verUnPacienteEspecficoObtieneLosDatosCompletosDeUnPacienteAPartirDeSuID
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 1
                  nombres: Juan
                  apellidos: Pérez
                  documento: '12345678'
                  telefono: '3001234567'
                properties:
                  id:
                    type: integer
                    example: 1
                  nombres:
                    type: string
                    example: Juan
                  apellidos:
                    type: string
                    example: Pérez
                  documento:
                    type: string
                    example: '12345678'
                  telefono:
                    type: string
                    example: '3001234567'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Paciente no encontrado'
                properties:
                  message:
                    type: string
                    example: 'Paciente no encontrado'
      tags:
        - 'Pacientes [ADMIN]'
    put:
      summary: "Actualizar un paciente\n\nPermite al administrador modificar los datos de un paciente específico."
      operationId: actualizarUnPacientePermiteAlAdministradorModificarLosDatosDeUnPacienteEspecfico
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 1
                  nombres: Juan
                  apellidos: Pérez
                  telefono: '3001234567'
                properties:
                  id:
                    type: integer
                    example: 1
                  nombres:
                    type: string
                    example: Juan
                  apellidos:
                    type: string
                    example: Pérez
                  telefono:
                    type: string
                    example: '3001234567'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Paciente no encontrado'
                properties:
                  message:
                    type: string
                    example: 'Paciente no encontrado'
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  errors:
                    nombres:
                      - 'El campo nombres es obligatorio'
                properties:
                  errors:
                    type: object
                    properties:
                      nombres:
                        type: array
                        example:
                          - 'El campo nombres es obligatorio'
                        items:
                          type: string
      tags:
        - 'Pacientes [ADMIN]'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                nombres:
                  type: string
                  description: 'Nombre del paciente.'
                  example: Juan
                  nullable: false
                apellidos:
                  type: string
                  description: 'Apellido del paciente.'
                  example: Pérez
                  nullable: false
                documento:
                  type: string
                  description: 'Documento de identidad.'
                  example: '12345678'
                  nullable: false
                rh:
                  type: string
                  description: 'Grupo sanguíneo.'
                  example: O+
                  nullable: false
                fecha_nacimiento:
                  type: date
                  description: 'Fecha de nacimiento.'
                  example: '1990-05-12'
                  nullable: false
                genero:
                  type: string
                  description: 'Género (M o F).'
                  example: M
                  nullable: false
                edad:
                  type: integer
                  description: 'Edad del paciente.'
                  example: 30
                  nullable: false
                telefono:
                  type: string
                  description: 'Número telefónico.'
                  example: '3001234567'
                  nullable: false
                alergias:
                  type: string
                  description: 'Alergias del paciente.'
                  example: Ninguna
                  nullable: true
                comentarios:
                  type: string
                  description: 'Comentarios adicionales.'
                  example: 'Paciente estable'
                  nullable: true
    delete:
      summary: "Eliminar un paciente\n\nPermite al administrador eliminar un paciente del sistema."
      operationId: eliminarUnPacientePermiteAlAdministradorEliminarUnPacienteDelSistema
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Paciente eliminado con éxito'
                properties:
                  message:
                    type: string
                    example: 'Paciente eliminado con éxito'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Paciente no encontrado'
                properties:
                  message:
                    type: string
                    example: 'Paciente no encontrado'
      tags:
        - 'Pacientes [ADMIN]'
    parameters:
      -
        in: path
        name: id
        description: 'ID del paciente a consultar.'
        example: 1
        required: true
        schema:
          type: integer
  /api/mi-perfil:
    get:
      summary: "Ver mi información\n\nDevuelve los datos del paciente autenticado."
      operationId: verMiInformacinDevuelveLosDatosDelPacienteAutenticado
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 1
                  nombres: Juan
                  apellidos: Pérez
                  documento: '12345678'
                  telefono: '3001234567'
                properties:
                  id:
                    type: integer
                    example: 1
                  nombres:
                    type: string
                    example: Juan
                  apellidos:
                    type: string
                    example: Pérez
                  documento:
                    type: string
                    example: '12345678'
                  telefono:
                    type: string
                    example: '3001234567'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Paciente no encontrado'
                properties:
                  message:
                    type: string
                    example: 'Paciente no encontrado'
      tags:
        - 'Pacientes [AUTENTICADO]'
    put:
      summary: "Actualizar mi información\n\nPermite al paciente autenticado actualizar sus datos personales."
      operationId: actualizarMiInformacinPermiteAlPacienteAutenticadoActualizarSusDatosPersonales
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 1
                  nombres: Juan
                  apellidos: Pérez
                  telefono: '3001234567'
                properties:
                  id:
                    type: integer
                    example: 1
                  nombres:
                    type: string
                    example: Juan
                  apellidos:
                    type: string
                    example: Pérez
                  telefono:
                    type: string
                    example: '3001234567'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Paciente no encontrado'
                properties:
                  message:
                    type: string
                    example: 'Paciente no encontrado'
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  errors:
                    nombres:
                      - 'El campo nombres es obligatorio'
                properties:
                  errors:
                    type: object
                    properties:
                      nombres:
                        type: array
                        example:
                          - 'El campo nombres es obligatorio'
                        items:
                          type: string
      tags:
        - 'Pacientes [AUTENTICADO]'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                nombres:
                  type: string
                  description: 'Nombre del paciente.'
                  example: Juan
                  nullable: false
                apellidos:
                  type: string
                  description: 'Apellido del paciente.'
                  example: Pérez
                  nullable: false
                telefono:
                  type: string
                  description: 'Número telefónico.'
                  example: '3001234567'
                  nullable: false
                alergias:
                  type: string
                  description: 'Alergias conocidas.'
                  example: Ninguna
                  nullable: true
                comentarios:
                  type: string
                  description: 'Comentarios adicionales.'
                  example: 'Paciente estable'
                  nullable: true
    delete:
      summary: "Eliminar mi cuenta\n\nPermite al paciente autenticado eliminar su cuenta del sistema junto con todos sus datos."
      operationId: eliminarMiCuentaPermiteAlPacienteAutenticadoEliminarSuCuentaDelSistemaJuntoConTodosSusDatos
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Paciente eliminado con éxito'
                properties:
                  message:
                    type: string
                    example: 'Paciente eliminado con éxito'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Paciente no encontrado'
                properties:
                  message:
                    type: string
                    example: 'Paciente no encontrado'
      tags:
        - 'Pacientes [AUTENTICADO]'
